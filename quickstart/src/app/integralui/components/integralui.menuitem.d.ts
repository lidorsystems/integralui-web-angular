import { ElementRef, QueryList } from '@angular/core';
import { IntegralUIBaseService, IntegralUIItem } from './integralui.core';
import { IntegralUICommonService } from '../services/integralui.common.service';
import { IntegralUIDataService } from '../services/integralui.data.service';
export declare class IntegralUIMenuItem extends IntegralUIItem {
    private dataService;
    protected elemRef: ElementRef;
    protected commonService?: IntegralUICommonService;
    protected baseService?: IntegralUIBaseService;
    private contentAnimation;
    private eventList;
    private itemList;
    private expandState;
    private isExpanded;
    private isItemHovered;
    private blockPos;
    private popupOrder;
    blockDisplay: string;
    blockElemWidth: string;
    blockElemHeight: string;
    blockOverflow: string;
    blockOpacity: number;
    private pauseTimer;
    blockElem: ElementRef;
    contentElem: ElementRef;
    contentList: QueryList<IntegralUIMenuItem>;
    protected parentCtrl: any;
    protected parentItem: IntegralUIMenuItem;
    protected blockClassName: string;
    protected expandBoxClassName: string;
    protected expandBoxSpaceClassName: string;
    protected separatorClassName: string;
    iconUrl: string;
    items: Array<any>;
    level: number;
    orientation: string;
    pause: number;
    showAnimation: boolean;
    templateRef: any;
    expanded: boolean;
    constructor(dataService: IntegralUIDataService, elemRef: ElementRef, commonService?: IntegralUICommonService, baseService?: IntegralUIBaseService);
    ngOnInit(): void;
    protected initStyle(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    collapse(): void;
    expand(): void;
    toggle(): void;
    onExpandBoxMouseDown(e: any): void;
    getDataType(): any;
    getItemLevel(): number;
    isThereChildren(): boolean;
    isBlockVisible(): boolean;
    updateLayout(): void;
    onMouseDown(e: any): void;
    onMouseEnter(e: any): void;
    onMouseLeave(e: any): void;
    onContextMenu(e: any): void;
    onChildItemMouseDown(e: any): void;
    private removePauseTimer;
    private toggleContent;
    getControlStyle(): any;
    getItemDisplay(): string;
    protected updateControlClass(): void;
    protected getExpandBoxSpaceClass(): string;
    protected getSeparatorClass(): any;
    protected getBlockClass(): string;
    protected getGeneralClass(): string;
    protected getExpandBoxClass(): string;
    protected getExpandBoxStyle(value: any): any;
    protected updateStyle(value: any): void;
}
