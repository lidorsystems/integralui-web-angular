[{"__symbolic":"module","version":4,"metadata":{"IntegralUIGrid":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./integralui.base.grid","name":"IntegralUIBaseGrid","line":404,"character":36},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"iui-grid","template":"\n\t\t<div [ngClass]=\"getControlClass()\" (DOMMouseScroll)=\"gridMouseWheel($event)\" (mousewheel)=\"gridMouseWheel($event)\" (mouseenter)=\"gridMouseEnter($event)\" (mousemove)=\"gridMouseMove($event)\" (mouseup)=\"gridMouseUp($event)\" (mouseleave)=\"gridMouseLeave($event)\" [ngStyle]=\"getControlStyle()\" (dragenter)=\"ctrlDragEnter($event)\" (dragleave)=\"ctrlDragLeave($event)\" (dragover)=\"ctrlDragOver($event)\" (drop)=\"ctrlDragDrop($event)\" (dragend)=\"ctrlDragEnd($event)\" (scroll)=\"onGridScroll($event)\" (touchstart)=\"ctrlTouchStart($event)\" (touchend)=\"ctrlTouchEnd($event)\">\n\t\t\t<div *ngIf=\"grouping.enabled\" class=\"iui-grid-grouping-panel\" (dragenter)=\"groupPanelDragEnter($event)\" (mouseenter)=\"groupPanelMouseEnter($event)\" (mousemove)=\"groupPanelMouseMove($event)\" (mouseleave)=\"groupPanelMouseLeave($event)\" (mouseup)=\"groupPanelMouseUp($event)\" [ngStyle]=\"{ width: groupPanelSize.width + 'px' }\" #groupingPanel>\n\t\t\t\t<span *ngFor=\"let group of activeGroups; let i = index\" (mouseenter)=\"groupMouseEnter($event, group)\" (mouseleave)=\"groupMouseLeave($event, group)\">\n\t\t\t\t\t<div class=\"iui-grid-grouping-panel-item\" [ngClass]=\"{ 'iui-grid-grouping-marker': i < activeGroups.length - 1 }\" [ngStyle]=\"{ 'margin-left': group==hoverGroup ? groupReorderMargin + 'px' : '3px', display: group == reorderGroup ? 'none' : 'inline-block' }\">\n\t\t\t\t\t\t<p class=\"iui-grid-grouping-panel-item-label\" (mousedown)=\"groupMouseDown($event, group)\">{{getGroupText(group)}}</p>\n\t\t\t\t\t\t<span class=\"iui-grid-grouping-panel-item-button\" (mousedown)=\"groupButtonMouseDown($event, group)\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t<div *ngIf=\"!groupReorderActive\" class=\"iui-grid-grouping-panel-toolbar\">\n\t\t\t\t\t<div class=\"iui-grid-grouping-panel-toolbar-button-add\" [iuiDropDown]=\"options.grouping.dropdown\" (dropDownOpen)=\"onAddGroupDropDownOpen($event)\">\n\t\t\t\t\t\t<span></span>\n                        <ng-template let-obj [iuiTemplate]=\"{ type: 'dropdown' }\">\n                            <ul *ngIf=\"isEnabled\" class=\"iui-grid-grouping-panel-dropdown-list\" (mousedown)=\"groupListMouseDown($event)\">\n                                <li *ngFor=\"let item of options.grouping.dropdown.items\" (mousedown)=\"groupListItemSelected(item)\">\n                                    <span class=\"iui-grid-grouping-panel-dropdown-list-checkbox\" [ngClass]=\"{ 'iui-grid-grouping-panel-dropdown-list-checkbox-true': checkColumnPresence(item.id) }\"></span>\n                                    <span>{{item.text}}</span>\n                                </li>\n                            </ul>\n                        </ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"activeGroups.length==0\" class=\"iui-grid-grouping-panel-item\" style=\"margin-left:-9999999px;\">\n\t\t\t\t\t<p class=\"iui-grid-grouping-panel-item-label\">Empty Group</p>\n\t\t\t\t\t<span class=\"iui-grid-grouping-panel-item-button\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"iui-grid-grouping-panel-item\" style=\"position:absolute;pointer-events:none;\" [ngStyle]=\"{ display: dragGroupSettings.display, top: dragGroupSettings.top + 'px', left: dragGroupSettings.left + 'px' }\" #dragGroup>\n\t\t\t\t\t<p class=\"iui-grid-grouping-panel-item-label\">{{dragGroupSettings.label}}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showHeader\" class=\"iui-grid-block iui-grid-block-top\" [ngStyle]=\"{ left: -contentLeftPos + 'px', top: groupPanelHeight + 'px' }\" #header>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr style=\"position:relative;\" #headerRow>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.header\" *ngFor=\"let column of scrollColumnList\" (mousemove)=\"columnMouseMove($event, column)\" (mousedown)=\"columnMouseDown($event, column)\" (mouseup)=\"columnMouseUp($event, column)\" (mouseenter)=\"columnMouseEnter($event, column)\" (mouseleave)=\"columnMouseLeave($event, column)\" (click)=\"columnClickEvent($event, column)\" (dblclick)=\"columnDblClickEvent($event, column)\" (contextmenu)=\"columnRightClickEvent($event, column)\" (touchstart)=\"columnTouchStart($event, column)\" [ngStyle]=\"column.inlineStyle.header\" #headerCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.headerHeight, opacity: getColumnOpacity(column), 'text-align': getColumnAlignment(column.data), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"isSortingColumn(column.data)\" [ngClass]=\"column.style.sorting\" data-element=\"sort-button\"></span>\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"headerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ height: animateColumnSize.height + 'px', width: column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-left': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ left: column.clickPos.x + 'px', height: animateColumnSize.height + 'px', width: getColumnWidth(column.data) - column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-right': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td *ngIf=\"reorderColumnObj && !isGroupPanelHovered && isGridHovered\" [ngClass]=\"reorderColumnObj.style.header\" [ngStyle]=\"{ position: 'absolute', top:0, left: reorderColumnObjPos.left + 'px', 'pointer-events': 'none', 'z-index': 999 }\">\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ opacity: '0.5', 'text-align': getColumnAlignment(reorderColumnObj.data), width: getColumnWidth(reorderColumnObj.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"headerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (reorderColumnObj.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showHeader && isThereFixedColumns('left')\" class=\"iui-grid-block iui-grid-block-top-left\" [ngStyle]=\"{ left: 0, top: groupPanelHeight + 'px' }\" #header>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr style=\"position:relative;\" #headerRow>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.header\" *ngFor=\"let column of scrollLeftColumnList\" (mousemove)=\"columnMouseMove($event, column)\" (mousedown)=\"columnMouseDown($event, column)\" (mouseup)=\"columnMouseUp($event, column)\" (mouseenter)=\"columnMouseEnter($event, column)\" (mouseleave)=\"columnMouseLeave($event, column)\" (click)=\"columnClickEvent($event, column)\" (dblclick)=\"columnDblClickEvent($event, column)\" (contextmenu)=\"columnRightClickEvent($event, column)\" (touchstart)=\"columnTouchStart($event, column)\" [ngStyle]=\"column.inlineStyle.header\" #headerLeftCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.headerHeight, opacity: getColumnOpacity(column), 'text-align': getColumnAlignment(column.data), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"isSortingColumn(column.data)\" [ngClass]=\"column.style.sorting\" data-element=\"sort-button\"></span>\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"headerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ height: animateColumnSize.height + 'px', width: column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-left': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ left: column.clickPos.x + 'px', height: animateColumnSize.height + 'px', width: getColumnWidth(column.data) - column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-right': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showHeader && isThereFixedColumns('right')\" class=\"iui-grid-block iui-grid-block-top-right\" [ngStyle]=\"{ right: getBlockRightPos() + 'px', top: groupPanelHeight + 'px' }\" #header>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr style=\"position:relative;\" #headerRow>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.header\" *ngFor=\"let column of scrollRightColumnList\" (mousemove)=\"columnMouseMove($event, column)\" (mousedown)=\"columnMouseDown($event, column)\" (mouseup)=\"columnMouseUp($event, column)\" (mouseenter)=\"columnMouseEnter($event, column)\" (mouseleave)=\"columnMouseLeave($event, column)\" (click)=\"columnClickEvent($event, column)\" (dblclick)=\"columnDblClickEvent($event, column)\" (contextmenu)=\"columnRightClickEvent($event, column)\" (touchstart)=\"columnTouchStart($event, column)\" [ngStyle]=\"column.inlineStyle.header\" #headerRightCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.headerHeight, opacity: getColumnOpacity(column), 'text-align': getColumnAlignment(column.data), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"isSortingColumn(column.data)\" [ngClass]=\"column.style.sorting\" data-element=\"sort-button\"></span>\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"headerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ height: animateColumnSize.height + 'px', width: column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-left': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t        <span *ngIf=\"allowAnimation && column.isClicked\" class=\"iui-grid-column-animate-select-block\" [ngStyle]=\"{ left: column.clickPos.x + 'px', height: animateColumnSize.height + 'px', width: getColumnWidth(column.data) - column.clickPos.x + 'px' }\">\n\t\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-column-animate-select iui-grid-column-animate-select-right': column.isClicked }\" [ngStyle]=\"{ height: animateColumnSize.height + 'px' }\"></span>\n\t\t\t\t\t        </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div class=\"iui-grid-block\" [ngStyle]=\"{ 'margin-top': blockMarginTop + groupPanelHeight + 'px', height: blockSize.height + 'px' }\" (scroll)=\"onContentScroll($event)\" #contentBlock style=\"overflow: visible;\">\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\" style=\"position:absolute;\" [ngStyle]=\"{ left: -contentLeftPos + 'px' }\" #body>\n\t\t\t\t\t<span [ngClass]=\"{ 'iui-grid-row-animate': true, 'iui-grid-row-animate-enter-suspended': allowAnimation && row.data == hoverRow }\" *ngFor=\"let row of scrollRowList | slice:0:visibleRange; let i = index\">\n\t\t\t\t\t\t<tr [ngClass]=\"row.style.row\" (mouseenter)=\"rowMouseEnter($event, row)\" (mouseleave)=\"rowMouseLeave($event, row)\" (mousedown)=\"rowMouseDown($event, row, i)\" (mousemove)=\"rowMouseMove($event, row, i)\" (mouseup)=\"rowMouseUp($event, row)\" [iuiDraggable]=\"row.draggable\" (dragstart)=\"rowDragStart($event, row)\" (dragover)=\"rowDragOver($event, row, i)\" (drop)=\"rowDragDrop($event, row)\" (click)=\"rowClickEvent($event, row)\" (dblclick)=\"rowDblClickEvent($event, row)\" (contextmenu)=\"rowRightClickEvent($event, row)\" (touchstart)=\"rowTouchStart($event, row)\" [ngStyle]=\"row.inlineStyle\" #rowElem>\n\t\t\t\t\t\t\t<td [ngClass]=\"row.style.cell\" *ngFor=\"let cell of row.cells | slice:0:viewIndexRange.right; let j = index\" (mouseenter)=\"cellMouseEnter($event, cell)\" (mouseleave)=\"cellMouseLeave($event)\" (mousedown)=\"cellMouseDown($event, cell)\" (click)=\"cellClickEvent($event, cell)\" (mouseup)=\"cellMouseUp($event, cell, i, j)\" (dblclick)=\"cellDblClickEvent($event, cell)\" (contextmenu)=\"cellRightClickEvent($event, cell)\" (touchend)=\"cellTouchEnd($event, cell, i, j)\" [ngStyle]=\"cell.inlineStyle\" #rowCellElem>\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.indent + 'px', 'text-align': cell.align, width: cell.width + 'px', height: cell.height }\" tabindex=\"{{cell.tabIndex}}\" [iuiFocus]=\"isCellFocused(cell)\" (focus)=\"cellGotFocus(cell)\" (blur)=\"cellLostFocus(cell)\" (keydown)=\"cellKeyDown($event, cell)\" (keypress)=\"cellKeyPress($event, cell)\" (keyup)=\"cellKeyUp($event, cell)\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"showExpandBox && cell.expandBoxAllowed\" [ngClass]=\"row.style.expandBox\" (mousedown)=\"expandBoxMouseDown($event, row.data)\" (mouseup)=\"expandBoxMouseUp($event, row.data)\" (touchstart)=\"expandBoxTouchStart($event, row.data)\"></span>\n\t\t\t                        <span *ngIf=\"cell.isEditorVisible\" [ngSwitch]=\"cell.editorType\" [ngClass]=\"{ 'iui-editor-disabled': !cell.isEditorEnabled }\">\n\t\t\t                            <!-- CHECKBOX -->\n\t\t\t                            <div *ngSwitchCase=\"2\" align=\"center\">\n\t\t\t                                <span class=\"{{cell.editorClass}}\"></span>\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                            <!-- DATEPICKER -->\n\t\t\t                            <span *ngSwitchCase=\"3\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{cell.editorValue}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- DROPLIST -->\n\t\t\t                            <span *ngSwitchCase=\"4\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- IMAGE -->\n\t\t\t                            <div *ngSwitchCase=\"5\" class=\"iui-editor-image\">\n\t\t\t                            \t<img *ngFor=\"let item of cell.editorValue\" [src]=\"item.src\" />\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                        \t<!-- LABEL -->\n\t\t\t                            <span *ngSwitchCase=\"6\" class=\"iui-editor-label\">{{getCellText(cell)}}</span>\n\n\t\t\t                            <!-- NUMERIC -->\n\t\t\t\t\t                    <input *ngSwitchCase=\"8\" class=\"iui-editor-numeric\" type=\"number\" [(ngModel)]=\"cell.data[getCellField('value')]\" (change)=\"editorNumericValueChange(cell, $event.target.value)\" (DOMMouseScroll)=\"editorMouseWheel($event)\" (mousewheel)=\"editorMouseWheel($event)\" draggable=\"true\" (dragstart)=\"editorPreventDragStart($event)\" />\n\n\t\t\t                            <!-- PROGRESS -->\n\t\t\t\t\t\t\t\t\t\t<div *ngSwitchCase=\"9\" class=\"iui-editor-progress\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"iui-editor-progress-content\" [ngStyle]=\"getEditorProgressStyle(cell)\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- RATING -->\n\t\t\t                            <div *ngSwitchCase=\"10\" class=\"iui-editor-rating\" align=\"center\">\n\t\t\t                                <iui-rating [controlStyle]=\"cell.editorStyle\" [(ngModel)]=\"cell.data[getCellField('value')]\" [enabled]=\"cell.isEditorEnabled\" [division]=\"cell.editorSettings.division\" [increment]=\"cell.editorSettings.increment\" [max]=\"cell.editorSettings.max\" [stepSize]=\"cell.editorSettings.stepSize\" (valueChanged)=\"editorValueChanged($event, cell)\"></iui-rating>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- TEXTBOX -->\n\t\t\t                            <span *ngSwitchCase=\"12\">\n\t\t\t\t\t\t                    <input class=\"iui-editor-textbox\" *ngIf=\"cell == currentEditorCell\" type=\"text\" [(ngModel)]=\"cell.data[getCellField('text')]\" (keydown)=\"editorKeyDown($event)\" [iuiFocus]=\"isEditorFocused\" (focus)=\"selectTextBoxContent($event)\" (blur)=\"editorLostFocus()\" />\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\" *ngIf=\"cell != currentEditorCell\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- CUSTOM -->\n\t\t\t                            <span [ngStyle]=\"{ display: cell.display }\">\n\t\t\t\t\t\t\t\t\t\t\t<span *ngSwitchDefault [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t                        </span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmptyPrev\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmpty\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2, 'empty-bottom': row.status == 3 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ height: animateRowSize.height + 'px', width: row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-left': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ left: row.clickPos.x + 'px', height: animateRowSize.height + 'px', width: animateRowSize.width - row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-right': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span *ngIf=\"isDragHandleVisible\" class=\"iui-drag-handle\" [ngStyle]=\"{ top: dragHandlePos.top + 'px' }\">\n\t\t\t\t\t\t<tr *ngFor=\"let dragRow of dragRowList\" [ngClass]=\"dragRow.style.row\">\n\t\t\t\t\t\t\t<td [ngClass]=\"dragRow.style.cell\" *ngFor=\"let cell of dragRow.cells; let j = index\" style=\"border-color:transparent\">\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.expandBoxAllowed ? dragObjIndent + 'px' : cell.indent + 'px', 'text-align': cell.align, width: cell.expandBoxAllowed ? cell.indent + cell.width - dragObjIndent - 2 + 'px' : cell.width + 'px', height: cell.height }\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"cell.expandBoxAllowed\" [ngClass]=\"dragRow.style.expandBox\"></span>\n\t\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</span>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"isThereFixedColumns('left')\" class=\"iui-grid-block-left\" [ngStyle]=\"{ 'margin-top': blockMarginTop + groupPanelHeight + 'px', height: leftBlockSize.height + 'px', width: leftBlockSize.width + 'px' }\" (scroll)=\"onContentScroll($event)\" style=\"overflow: visible;\">\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\" style=\"position:absolute;\" [ngStyle]=\"{ left: 0 }\" #bodyLeft>\n\t\t\t\t\t<span [ngClass]=\"{ 'iui-grid-row-animate': true, 'iui-grid-row-animate-enter-suspended': allowAnimation && row.data == hoverRow }\" *ngFor=\"let row of scrollLeftRowList | slice:0:visibleRange; let i = index\">\n\t\t\t\t\t\t<tr [ngClass]=\"row.style.row\" (mouseenter)=\"rowMouseEnter($event, row)\" (mouseleave)=\"rowMouseLeave($event, row)\" (mousedown)=\"rowMouseDown($event, row, i)\" (mousemove)=\"rowMouseMove($event, row, i)\" (mouseup)=\"rowMouseUp($event, row)\" [iuiDraggable]=\"row.draggable\" (dragstart)=\"rowDragStart($event, row)\" (dragover)=\"rowDragOver($event, row, i, 'left')\" (drop)=\"rowDragDrop($event, row)\" (click)=\"rowClickEvent($event, row)\" (dblclick)=\"rowDblClickEvent($event, row)\" (contextmenu)=\"rowRightClickEvent($event, row)\" (touchstart)=\"rowTouchStart($event, row)\" [ngStyle]=\"row.inlineStyle\" #rowLeftElem>\n\t\t\t\t\t\t\t<td [ngClass]=\"row.style.cell\" *ngFor=\"let cell of row.cells | slice:0:fixedLeftViewIndexRange; let j = index\" (mouseenter)=\"cellMouseEnter($event, cell)\" (mouseleave)=\"cellMouseLeave($event)\" (mousedown)=\"cellMouseDown($event, cell)\" (click)=\"cellClickEvent($event, cell)\" (mouseup)=\"cellMouseUp($event, cell, i, j)\" (dblclick)=\"cellDblClickEvent($event, cell)\" (contextmenu)=\"cellRightClickEvent($event, cell)\" (touchend)=\"cellTouchEnd($event, cell, i, j)\" [ngStyle]=\"cell.inlineStyle\" #rowCellElem>\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.indent + 'px', 'text-align': cell.align, width: cell.width + 'px', height: cell.height }\" tabindex=\"{{cell.tabIndex}}\" [iuiFocus]=\"isCellFocused(cell)\" (focus)=\"cellGotFocus(cell)\" (blur)=\"cellLostFocus(cell)\" (keydown)=\"cellKeyDown($event, cell)\" (keypress)=\"cellKeyPress($event, cell)\" (keyup)=\"cellKeyUp($event, cell)\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"showExpandBox && cell.expandBoxAllowed\" [ngClass]=\"row.style.expandBox\" (mousedown)=\"expandBoxMouseDown($event, row.data)\" (mouseup)=\"expandBoxMouseUp($event, row.data)\" (touchstart)=\"expandBoxTouchStart($event, row.data)\"></span>\n\t\t\t                        <span *ngIf=\"cell.isEditorVisible\" [ngSwitch]=\"cell.editorType\" [ngClass]=\"{ 'iui-editor-disabled': !cell.isEditorEnabled }\">\n\t\t\t                            <!-- CHECKBOX -->\n\t\t\t                            <div *ngSwitchCase=\"2\" align=\"center\">\n\t\t\t                                <span class=\"{{cell.editorClass}}\"></span>\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                            <!-- DATEPICKER -->\n\t\t\t                            <span *ngSwitchCase=\"3\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{cell.editorValue}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- DROPLIST -->\n\t\t\t                            <span *ngSwitchCase=\"4\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- IMAGE -->\n\t\t\t                            <div *ngSwitchCase=\"5\" class=\"iui-editor-image\">\n\t\t\t                            \t<img *ngFor=\"let item of cell.editorValue\" [src]=\"item.src\" />\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                        \t<!-- LABEL -->\n\t\t\t                            <span *ngSwitchCase=\"6\" class=\"iui-editor-label\">{{getCellText(cell)}}</span>\n\n\t\t\t                            <!-- NUMERIC -->\n\t\t\t\t\t                    <input *ngSwitchCase=\"8\" class=\"iui-editor-numeric\" type=\"number\" [(ngModel)]=\"cell.data[getCellField('value')]\" (change)=\"editorNumericValueChange(cell, $event.target.value)\" (DOMMouseScroll)=\"editorMouseWheel($event)\" (mousewheel)=\"editorMouseWheel($event)\" draggable=\"true\" (dragstart)=\"editorPreventDragStart($event)\" />\n\n\t\t\t                            <!-- PROGRESS -->\n\t\t\t\t\t\t\t\t\t\t<div *ngSwitchCase=\"9\" class=\"iui-editor-progress\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"iui-editor-progress-content\" [ngStyle]=\"getEditorProgressStyle(cell)\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- RATING -->\n\t\t\t                            <div *ngSwitchCase=\"10\" class=\"iui-editor-rating\" align=\"center\">\n\t\t\t                                <iui-rating [controlStyle]=\"cell.editorStyle\" [(ngModel)]=\"cell.data[getCellField('value')]\" [enabled]=\"cell.isEditorEnabled\" [division]=\"cell.editorSettings.division\" [increment]=\"cell.editorSettings.increment\" [max]=\"cell.editorSettings.max\" [stepSize]=\"cell.editorSettings.stepSize\" (valueChanged)=\"editorValueChanged($event, cell)\"></iui-rating>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- TEXTBOX -->\n\t\t\t                            <span *ngSwitchCase=\"12\">\n\t\t\t\t\t\t                    <input class=\"iui-editor-textbox\" *ngIf=\"cell == currentEditorCell\" type=\"text\" [(ngModel)]=\"cell.data[getCellField('text')]\" (keydown)=\"editorKeyDown($event)\" [iuiFocus]=\"isEditorFocused\" (focus)=\"selectTextBoxContent($event)\" (blur)=\"editorLostFocus()\" />\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\" *ngIf=\"cell != currentEditorCell\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- CUSTOM -->\n\t\t\t                            <span [ngStyle]=\"{ display: cell.display }\">\n\t\t\t\t\t\t\t\t\t\t\t<span *ngSwitchDefault [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t                        </span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmptyPrev\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmpty\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2, 'empty-bottom': row.status == 3 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ height: animateRowSize.height + 'px', width: row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-left': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ left: row.clickPos.x + 'px', height: animateRowSize.height + 'px', width: animateRowSize.width - row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-right': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span *ngIf=\"isDragHandleVisible\" class=\"iui-drag-handle\" [ngStyle]=\"{ top: dragHandlePos.top + 'px' }\">\n\t\t\t\t\t\t<tr *ngFor=\"let dragRow of dragRowList\" [ngClass]=\"dragRow.style.row\">\n\t\t\t\t\t\t\t<td [ngClass]=\"dragRow.style.cell\" *ngFor=\"let cell of dragRow.cells; let j = index\" style=\"border-color:transparent\">\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.expandBoxAllowed ? dragObjIndent + 'px' : cell.indent + 'px', 'text-align': cell.align, width: cell.expandBoxAllowed ? cell.indent + cell.width - dragObjIndent - 2 + 'px' : cell.width + 'px', height: cell.height }\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"cell.expandBoxAllowed\" [ngClass]=\"dragRow.style.expandBox\"></span>\n\t\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</span>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"isThereFixedColumns('right')\" class=\"iui-grid-block-right\" [ngStyle]=\"{ 'margin-top': blockMarginTop + groupPanelHeight + 'px', height: rightBlockSize.height + 'px', right: getBlockRightPos() + 'px', width: rightBlockSize.width + 'px' }\" (scroll)=\"onContentScroll($event)\" style=\"overflow: visible;\">\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\" style=\"position:absolute;\" #bodyRight>\n\t\t\t\t\t<span [ngClass]=\"{ 'iui-grid-row-animate': true, 'iui-grid-row-animate-enter-suspended': allowAnimation && row.data == hoverRow }\" *ngFor=\"let row of scrollRightRowList | slice:0:visibleRange; let i = index\">\n\t\t\t\t\t\t<tr [ngClass]=\"row.style.row\" (mouseenter)=\"rowMouseEnter($event, row)\" (mouseleave)=\"rowMouseLeave($event, row)\" (mousedown)=\"rowMouseDown($event, row, i)\" (mousemove)=\"rowMouseMove($event, row, i)\" (mouseup)=\"rowMouseUp($event, row)\" [iuiDraggable]=\"row.draggable\" (dragstart)=\"rowDragStart($event, row)\" (dragover)=\"rowDragOver($event, row, i, 'right')\" (drop)=\"rowDragDrop($event, row)\" (click)=\"rowClickEvent($event, row)\" (dblclick)=\"rowDblClickEvent($event, row)\" (contextmenu)=\"rowRightClickEvent($event, row)\" (touchstart)=\"rowTouchStart($event, row)\" [ngStyle]=\"row.inlineStyle\" #rowRightElem>\n\t\t\t\t\t\t\t<td [ngClass]=\"row.style.cell\" *ngFor=\"let cell of row.cells | slice:0:fixedRightViewIndexRange; let j = index\" (mouseenter)=\"cellMouseEnter($event, cell)\" (mouseleave)=\"cellMouseLeave($event)\" (mousedown)=\"cellMouseDown($event, cell)\" (click)=\"cellClickEvent($event, cell)\" (mouseup)=\"cellMouseUp($event, cell, i, j)\" (dblclick)=\"cellDblClickEvent($event, cell)\" (contextmenu)=\"cellRightClickEvent($event, cell)\" (touchend)=\"cellTouchEnd($event, cell, i, j)\" [ngStyle]=\"cell.inlineStyle\" #rowCellElem>\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.indent + 'px', 'text-align': cell.align, width: cell.width + 'px', height: cell.height }\" tabindex=\"{{cell.tabIndex}}\" [iuiFocus]=\"isCellFocused(cell)\" (focus)=\"cellGotFocus(cell)\" (blur)=\"cellLostFocus(cell)\" (keydown)=\"cellKeyDown($event, cell)\" (keypress)=\"cellKeyPress($event, cell)\" (keyup)=\"cellKeyUp($event, cell)\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"showExpandBox && cell.expandBoxAllowed\" [ngClass]=\"row.style.expandBox\" (mousedown)=\"expandBoxMouseDown($event, row.data)\" (mouseup)=\"expandBoxMouseUp($event, row.data)\" (touchstart)=\"expandBoxTouchStart($event, row.data)\"></span>\n\t\t\t                        <span *ngIf=\"cell.isEditorVisible\" [ngSwitch]=\"cell.editorType\" [ngClass]=\"{ 'iui-editor-disabled': !cell.isEditorEnabled }\">\n\t\t\t                            <!-- CHECKBOX -->\n\t\t\t                            <div *ngSwitchCase=\"2\" align=\"center\">\n\t\t\t                                <span class=\"{{cell.editorClass}}\"></span>\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                            <!-- DATEPICKER -->\n\t\t\t                            <span *ngSwitchCase=\"3\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{cell.editorValue}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- DROPLIST -->\n\t\t\t                            <span *ngSwitchCase=\"4\" (click)=\"editorClick($event)\">\n\t\t\t\t\t\t\t                <div class=\"iui-editor-dropdown-button\" [ngClass]=\"{ 'iui-editor-dropdown-button-hover': cell == hoverCell }\"><span></span></div>\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- IMAGE -->\n\t\t\t                            <div *ngSwitchCase=\"5\" class=\"iui-editor-image\">\n\t\t\t                            \t<img *ngFor=\"let item of cell.editorValue\" [src]=\"item.src\" />\n\t\t\t\t\t\t\t            </div>\n\n\t\t\t                        \t<!-- LABEL -->\n\t\t\t                            <span *ngSwitchCase=\"6\" class=\"iui-editor-label\">{{getCellText(cell)}}</span>\n\n\t\t\t                            <!-- NUMERIC -->\n\t\t\t\t\t                    <input *ngSwitchCase=\"8\" class=\"iui-editor-numeric\" type=\"number\" [(ngModel)]=\"cell.data[getCellField('value')]\" (change)=\"editorNumericValueChange(cell, $event.target.value)\" (DOMMouseScroll)=\"editorMouseWheel($event)\" (mousewheel)=\"editorMouseWheel($event)\" draggable=\"true\" (dragstart)=\"editorPreventDragStart($event)\" />\n\n\t\t\t                            <!-- PROGRESS -->\n\t\t\t\t\t\t\t\t\t\t<div *ngSwitchCase=\"9\" class=\"iui-editor-progress\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"iui-editor-progress-content\" [ngStyle]=\"getEditorProgressStyle(cell)\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- RATING -->\n\t\t\t                            <div *ngSwitchCase=\"10\" class=\"iui-editor-rating\" align=\"center\">\n\t\t\t                                <iui-rating [controlStyle]=\"cell.editorStyle\" [(ngModel)]=\"cell.data[getCellField('value')]\" [enabled]=\"cell.isEditorEnabled\" [division]=\"cell.editorSettings.division\" [increment]=\"cell.editorSettings.increment\" [max]=\"cell.editorSettings.max\" [stepSize]=\"cell.editorSettings.stepSize\" (valueChanged)=\"editorValueChanged($event, cell)\"></iui-rating>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t                            <!-- TEXTBOX -->\n\t\t\t                            <span *ngSwitchCase=\"12\">\n\t\t\t\t\t\t                    <input class=\"iui-editor-textbox\" *ngIf=\"cell == currentEditorCell\" type=\"text\" [(ngModel)]=\"cell.data[getCellField('text')]\" (keydown)=\"editorKeyDown($event)\" [iuiFocus]=\"isEditorFocused\" (focus)=\"selectTextBoxContent($event)\" (blur)=\"editorLostFocus()\" />\n\t\t\t\t\t\t\t                <span class=\"iui-editor-label\" *ngIf=\"cell != currentEditorCell\">{{getCellValue(cell)}}</span>\n\t\t\t                            </span>\n\n\t\t\t                            <!-- CUSTOM -->\n\t\t\t                            <span [ngStyle]=\"{ display: cell.display }\">\n\t\t\t\t\t\t\t\t\t\t\t<span *ngSwitchDefault [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t                        </span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmptyPrev\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td *ngIf=\"row.isEmpty\" colspan=\"999\" style=\"pointer-events:none;\">\n\t\t\t\t\t\t\t\t<div class=\"iui-grid-row-empty-content\" [ngClass]=\"{ 'open-empty-bottom': row.status == 1, 'close-empty-bottom': row.status == 2, 'empty-bottom': row.status == 3 }\"></div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ height: animateRowSize.height + 'px', width: row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-left': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t        <span *ngIf=\"allowAnimation && row.isClicked\" class=\"iui-grid-row-animate-select-block\" [ngStyle]=\"{ left: row.clickPos.x + 'px', height: animateRowSize.height + 'px', width: animateRowSize.width - row.clickPos.x + 'px' }\">\n\t\t\t\t\t        <span [ngClass]=\"{ 'iui-grid-row-animate-select iui-grid-row-animate-select-right': row.isClicked }\" [ngStyle]=\"{ height: animateRowSize.height + 'px' }\"></span>\n\t\t\t\t        </span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span *ngIf=\"isDragHandleVisible\" class=\"iui-drag-handle\" [ngStyle]=\"{ top: dragHandlePos.top + 'px' }\">\n\t\t\t\t\t\t<tr *ngFor=\"let dragRow of dragRowList\" [ngClass]=\"dragRow.style.row\">\n\t\t\t\t\t\t\t<td [ngClass]=\"dragRow.style.cell\" *ngFor=\"let cell of dragRow.cells; let j = index\" style=\"border-color:transparent\">\n\t\t\t\t\t\t\t\t<div [ngClass]=\"cell.style.content\" [ngStyle]=\"{ 'padding-left': cell.expandBoxAllowed ? dragObjIndent + 'px' : cell.indent + 'px', 'text-align': cell.align, width: cell.expandBoxAllowed ? cell.indent + cell.width - dragObjIndent - 2 + 'px' : cell.width + 'px', height: cell.height }\">\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"cell.expandBoxAllowed\" [ngClass]=\"dragRow.style.expandBox\"></span>\n\t\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"cellData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (cell.data)}\"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</span>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showHoverRow && !isUpdateActive\" class=\"iui-grid-block iui-grid-block-hover\" [ngStyle]=\"{ left: blockHoverRect.left + 'px', top: blockHoverRect.top + 'px', height: blockHoverRect.height + 'px', width: blockHoverRect.width + 'px' }\">\n\t\t\t\t<div [ngStyle]=\"{ height: blockHoverRect.height + 'px' }\" (mousemove)=\"hoverBlockMouseMove($event)\" (mouseleave)=\"hoverBlockMouseLeave($event)\">\n\t\t\t\t\t<span [iuiTemplateOutlet]=\"rowHoverData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (hoverRowObj.data)}\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showFooter\" class=\"iui-grid-block iui-grid-block-bottom\" [ngStyle]=\"{ left: -contentLeftPos + 'px', bottom: getBlockBottomPos() + 'px' }\" #footer>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.footer\" *ngFor=\"let column of scrollColumnList\" [ngStyle]=\"column.inlineStyle.footer\" (mouseenter)=\"footerMouseEnter($event, column)\" #footerCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.footerHeight, 'text-align': getColumnAlignment(column.data, true), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"footerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td> \n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showFooter && isThereFixedColumns('left')\" class=\"iui-grid-block iui-grid-block-bottom-left\" [ngStyle]=\"{ left: 0, bottom: getBlockBottomPos() + 'px' }\" #footer>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.footer\" *ngFor=\"let column of scrollLeftColumnList\" [ngStyle]=\"column.inlineStyle.footer\" (mouseenter)=\"footerMouseEnter($event, column)\" #footerLeftCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.footerHeight, 'text-align': getColumnAlignment(column.data, true), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"footerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td> \n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"showFooter && isThereFixedColumns('right')\" class=\"iui-grid-block iui-grid-block-bottom-right\" [ngStyle]=\"{ right: getBlockRightPos() + 'px', bottom: getBlockBottomPos() + 'px' }\" #footer>\n\t\t\t\t<table cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td [ngClass]=\"column.style.footer\" *ngFor=\"let column of scrollRightColumnList\" [ngStyle]=\"column.inlineStyle.footer\" (mouseenter)=\"footerMouseEnter($event, column)\" #footerRightCellElem>\n\t\t\t\t\t\t\t<div [ngStyle]=\"{ height: column.footerHeight, 'text-align': getColumnAlignment(column.data, true), width: getColumnWidth(column.data) + 'px' }\">\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"footerData[0]\" [iuiTemplateOutletContext]=\"{$implicit: (column.data)}\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td> \n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n            <iui-scrollbar *ngIf=\"isVerScrollVisible()\" [enabled]=\"enabled\" [value]=\"currentScrollPos.y\" [max]=\"maxScrollPos.y\" [largeChange]=\"scrollLargeChange.y\" [height]=\"scrollBarSize.height\" (valueChanged)=\"onVerticalScrollChanged($event)\" (scrollStart)=\"onVerticalScrollStart($event)\" (scrollEnd)=\"onVerticalScrollEnd($event)\" (mouseenter)=\"scrollMouseEnter($event)\" [position]=\"{ top: groupPanelHeight + 1 }\" #verScroll></iui-scrollbar>\n            <iui-scrollbar *ngIf=\"isHorScrollVisible()\" [enabled]=\"enabled\" [orientation]=\"horScrollOrientation\" [value]=\"currentScrollPos.x\" [max]=\"maxScrollPos.x\" [width]=\"scrollBarSize.width\" (valueChanged)=\"onHorizontalScrollChanged($event)\" (scrollStart)=\"onHorizontalScrollStart($event)\" (scrollEnd)=\"onHorizontalScrollEnd($event)\" (mouseenter)=\"scrollMouseEnter($event)\" [position]=\"{ bottom: horScrollElemPos.bottom }\" #horScroll></iui-scrollbar>\n            <div *ngIf=\"isVerScrollVisible() && isHorScrollVisible()\" class=\"iui-scrollbar-corner\" style=\"position:absolute;right:0;bottom:0;width:16px;height:16px;\" [ngStyle]=\"{ bottom: cornerScrollElemPos.bottom + 'px' }\"></div>\n            <iui-paginator *ngIf=\"isPaginationEnabled()\" (mouseenter)=\"paginatorMouseEnter($event)\" align=\"center\" style=\"position:absolute;top:0;width:100%\" [ngStyle]=\"{ top: paginatorPos.top + 'px' }\" [maxPages]=\"getMaxPages()\" [currentPage]=\"currentPageNumber\" (pageChanged)=\"paginatorPageChanged($event)\" #paginator></iui-paginator>\n\t\t</div>\n\t","inputs":["allowColumnReorder","allowDrag","allowDrop","allowFilter","allowFocus","appRef","autoSizeColumns","autoUpdate","columns","controlStyle","data","dataFields","dragMode","enabled","focusedCell","gridLines","name","rowHeight","rows","paging","selectedColumn","selectedRow","selectionMode","showScroll","size","sorting","state"],"outputs":["afterSelect","beforeEdit","beforeSelect","beforeUpdate","change","columnAdding","columnAdded","columnClick","columnRemoving","columnRemoved","columnsCleared","columnOrderChanged","columnSizeChanged","dragEnter","dragDrop","dragDropComplete","dragLeave","dragOver","keyDown","keyPress","keyUp","loadComplete","rowAdding","rowAdded","rowClick","rowDblClick","rowHover","rowRemoving","rowRemoved","rowsCleared","scrollPosChanged","selectionChanged","updateComplete"],"providers":[{"__symbolic":"reference","module":"./integralui.core","name":"IntegralUIBaseService","line":401,"character":16},{"__symbolic":"reference","module":"../services/integralui.data.service","name":"IntegralUIDataService","line":401,"character":39}],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":402,"character":16},"member":"None"}}]}],"members":{"templates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":450,"character":2},"arguments":[{"__symbolic":"reference","module":"./integralui.core","name":"IntegralUITemplate","line":450,"character":18}]}]}],"groupingPanelElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":451,"character":2},"arguments":["groupingPanel",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":451,"character":37},"static":false}]}]}],"dragGroupElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":452,"character":2},"arguments":["dragGroup",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":452,"character":33},"static":false}]}]}],"columnElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":453,"character":2},"arguments":["headerCellElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":453,"character":41}}]}]}],"columnLeftElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":454,"character":2},"arguments":["headerLeftCellElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":454,"character":45}}]}]}],"columnRightElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":455,"character":2},"arguments":["headerRightCellElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":455,"character":46}}]}]}],"footerElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":456,"character":2},"arguments":["footerCellElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":456,"character":41}}]}]}],"rowElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":457,"character":2},"arguments":["rowElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":457,"character":34}}]}]}],"rowLeftElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":458,"character":2},"arguments":["rowLeftElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":458,"character":38}}]}]}],"rowRightElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":459,"character":2},"arguments":["rowRightElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":459,"character":39}}]}]}],"cellElems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":460,"character":2},"arguments":["rowCellElem",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":460,"character":38}}]}]}],"headerElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":461,"character":2},"arguments":["header",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":461,"character":30},"static":false}]}]}],"headerRowElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":462,"character":2},"arguments":["headerRow",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":462,"character":33},"static":false}]}]}],"footerElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":463,"character":2},"arguments":["footer",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":463,"character":30},"static":false}]}]}],"bodyElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":464,"character":2},"arguments":["body",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":464,"character":28},"static":false}]}]}],"bodyLeftElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":465,"character":2},"arguments":["bodyLeft",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":465,"character":32},"static":false}]}]}],"bodyRightElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":466,"character":2},"arguments":["bodyRight",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":466,"character":33},"static":false}]}]}],"verScrollCmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":467,"character":2},"arguments":["verScroll",{"static":false}]}]}],"horScrollCmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":468,"character":2},"arguments":["horScroll",{"static":false}]}]}],"contentRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":469,"character":5},"arguments":["contentBlock",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":469,"character":38},"static":false}]}]}],"paginatorElem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":470,"character":2},"arguments":["paginator",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":470,"character":33},"static":false}]}]}],"autoExpand":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":496,"character":2}}]}],"expandColumnIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":498,"character":2}}]}],"expandColumnID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":514,"character":2}}]}],"grouping":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":525,"character":2}}]}],"groups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":533,"character":2}}]}],"indent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":541,"character":2}}]}],"showHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":552,"character":2}}]}],"showFooter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":563,"character":2}}]}],"afterCollapse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":576,"character":5}}]}],"afterExpand":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":577,"character":5}}]}],"beforeCollapse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":578,"character":5}}]}],"beforeExpand":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":579,"character":5}}]}],"groupAdding":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":580,"character":5}}]}],"groupAdded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":581,"character":5}}]}],"groupRemoving":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":582,"character":5}}]}],"groupRemoved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":583,"character":5}}]}],"groupOrderChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":584,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../services/integralui.data.service","name":"IntegralUIDataService","line":589,"character":25},{"__symbolic":"reference","module":"../services/integralui.dragdrop.service","name":"IntegralUIDragDropService","line":590,"character":29},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":591,"character":21},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":592,"character":26},{"__symbolic":"reference","module":"../services/integralui.common.service","name":"IntegralUICommonService","line":593,"character":28},{"__symbolic":"reference","module":"../services/integralui.filter.service","name":"IntegralUIFilterService","line":594,"character":28},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":595,"character":24},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":596,"character":26},{"__symbolic":"reference","module":"./integralui.core","name":"IntegralUIBaseService","line":597,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"updateData":[{"__symbolic":"method"}],"initStyle":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterContentChecked":[{"__symbolic":"method"}],"updateDataFields":[{"__symbolic":"method"}],"updateGroupFields":[{"__symbolic":"method"}],"updateScrollColumnList":[{"__symbolic":"method"}],"updateScrollNormalColumnList":[{"__symbolic":"method"}],"updateScrollLeftColumnList":[{"__symbolic":"method"}],"updateScrollRightColumnList":[{"__symbolic":"method"}],"updateScrollRowList":[{"__symbolic":"method"}],"updateScrollNormalRowList":[{"__symbolic":"method"}],"updateScrollLeftRowList":[{"__symbolic":"method"}],"updateScrollRightRowList":[{"__symbolic":"method"}],"isRowGroup":[{"__symbolic":"method"}],"createScrollObjFromRow":[{"__symbolic":"method"}],"createScrollLeftObjFromRow":[{"__symbolic":"method"}],"createScrollRightObjFromRow":[{"__symbolic":"method"}],"updateScrollRowListDragOver":[{"__symbolic":"method"}],"addColumnToCurrentList":[{"__symbolic":"method"}],"updateCurrentColumnList":[{"__symbolic":"method"}],"getGroup":[{"__symbolic":"method"}],"addRowToGroup":[{"__symbolic":"method"}],"updateGroupList":[{"__symbolic":"method"}],"groupAggregation":[{"__symbolic":"method"}],"createGroupExpandList":[{"__symbolic":"method"}],"updateExpandStatus":[{"__symbolic":"method"}],"updateGrouping":[{"__symbolic":"method"}],"getGroupExpandObj":[{"__symbolic":"method"}],"updateGroupExpandValue":[{"__symbolic":"method"}],"updateCurrentRowList":[{"__symbolic":"method"}],"updatePageList":[{"__symbolic":"method"}],"addChildRows":[{"__symbolic":"method"}],"addRowToCurrentList":[{"__symbolic":"method"}],"getFullList":[{"__symbolic":"method"}],"updateFullList":[{"__symbolic":"method"}],"loadData":[{"__symbolic":"method"}],"expandOnDelay":[{"__symbolic":"method"}],"rowDragStart":[{"__symbolic":"method"}],"rowDragStartHandle":[{"__symbolic":"method"}],"rowDragStartPopup":[{"__symbolic":"method"}],"rowDragOver":[{"__symbolic":"method"}],"rowDragDrop":[{"__symbolic":"method"}],"isParentOf":[{"__symbolic":"method"}],"isChildOf":[{"__symbolic":"method"}],"processDataDrop":[{"__symbolic":"method"}],"processDataDropAtTargetGroup":[{"__symbolic":"method"}],"processDataDropAtTargetRow":[{"__symbolic":"method"}],"getFirstGroupChildRow":[{"__symbolic":"method"}],"updateDragHandlePos":[{"__symbolic":"method"}],"openDropDown":[{"__symbolic":"method"}],"collapse":[{"__symbolic":"method"}],"expand":[{"__symbolic":"method"}],"toggle":[{"__symbolic":"method"}],"findGroupById":[{"__symbolic":"method"}],"findColumnById":[{"__symbolic":"method"}],"getCellIndexById":[{"__symbolic":"method"}],"getColumnElems":[{"__symbolic":"method"}],"getColumnFromCell":[{"__symbolic":"method"}],"getCellAlignment":[{"__symbolic":"method"}],"getColumnAlignment":[{"__symbolic":"method"}],"getRowElems":[{"__symbolic":"method"}],"isGroupExpandedFromRow":[{"__symbolic":"method"}],"isGroupExpanded":[{"__symbolic":"method"}],"isRowExpanded":[{"__symbolic":"method"}],"isThereVisibleChildren":[{"__symbolic":"method"}],"getGroupTextFromColumn":[{"__symbolic":"method"}],"getGroupText":[{"__symbolic":"method"}],"updateDragGroupElem":[{"__symbolic":"method"}],"groupPanelDragEnter":[{"__symbolic":"method"}],"groupPanelMouseEnter":[{"__symbolic":"method"}],"groupPanelMouseMove":[{"__symbolic":"method"}],"groupPanelMouseLeave":[{"__symbolic":"method"}],"checkColumnPresence":[{"__symbolic":"method"}],"groupPanelMouseUp":[{"__symbolic":"method"}],"groupMouseEnter":[{"__symbolic":"method"}],"groupMouseLeave":[{"__symbolic":"method"}],"groupMouseDown":[{"__symbolic":"method"}],"groupButtonMouseDown":[{"__symbolic":"method"}],"addGroup":[{"__symbolic":"method"}],"removeGroup":[{"__symbolic":"method"}],"groupListItemSelected":[{"__symbolic":"method"}],"groupListMouseDown":[{"__symbolic":"method"}],"onAddGroupDropDownOpen":[{"__symbolic":"method"}],"columnMouseDown":[{"__symbolic":"method"}],"columnMouseUp":[{"__symbolic":"method"}],"columnMouseMove":[{"__symbolic":"method"}],"columnMouseEnter":[{"__symbolic":"method"}],"columnMouseLeave":[{"__symbolic":"method"}],"footerMouseEnter":[{"__symbolic":"method"}],"gridMouseMove":[{"__symbolic":"method"}],"gridMouseUp":[{"__symbolic":"method"}],"gridMouseEnter":[{"__symbolic":"method"}],"gridMouseLeave":[{"__symbolic":"method"}],"rowMouseEnter":[{"__symbolic":"method"}],"hoverBlockMouseMove":[{"__symbolic":"method"}],"hoverBlockMouseLeave":[{"__symbolic":"method"}],"rowMouseLeave":[{"__symbolic":"method"}],"clearHoverRow":[{"__symbolic":"method"}],"rowMouseMove":[{"__symbolic":"method"}],"resetReorderColumnSettings":[{"__symbolic":"method"}],"processLeftArrowKey":[{"__symbolic":"method"}],"processRightArrowKey":[{"__symbolic":"method"}],"updateRange":[{"__symbolic":"method"}],"updateCurrentLayout":[{"__symbolic":"method"}],"updateBlockSize":[{"__symbolic":"method"}],"updateLeftBlockSize":[{"__symbolic":"method"}],"updateRightBlockSize":[{"__symbolic":"method"}],"resetLayoutTimer":[{"__symbolic":"method"}],"updateExpandingColumn":[{"__symbolic":"method"}],"updateLayout":[{"__symbolic":"method"}],"updateVisibleRange":[{"__symbolic":"method"}],"updateScrollSize":[{"__symbolic":"method"}],"getRowScrollIndex":[{"__symbolic":"method"}],"onWindowMouseMove":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":3510,"character":5},"arguments":["document:mousemove",["$event"]]}]}],"onWindowMouseUp":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":3593,"character":5},"arguments":["document:mouseup",["$event"]]}]}],"onWindowTouchEnd":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":3623,"character":5},"arguments":["document:touchend",["$event"]]}]}],"getRowLevel":[{"__symbolic":"method"}],"getRowParent":[{"__symbolic":"method"}],"getPrevRow":[{"__symbolic":"method"}],"getNextRow":[{"__symbolic":"method"}],"moveRow":[{"__symbolic":"method"}],"moveRowAt":[{"__symbolic":"method"}],"beginLoad":[{"__symbolic":"method"}],"endLoad":[{"__symbolic":"method"}],"isRowLoading":[{"__symbolic":"method"}],"getColumnOpacity":[{"__symbolic":"method"}],"getHeaderRect":[{"__symbolic":"method"}],"scrollTo":[{"__symbolic":"method"}],"rowMouseDown":[{"__symbolic":"method"}],"rowMouseUp":[{"__symbolic":"method"}],"getControlStyle":[{"__symbolic":"method"}],"updateColumnStyle":[{"__symbolic":"method"}],"updateRowStyle":[{"__symbolic":"method"}],"getColumnStyle":[{"__symbolic":"method"}],"getColumnHeaderStyle":[{"__symbolic":"method"}],"getColumnBodyStyle":[{"__symbolic":"method"}],"getColumnFooterStyle":[{"__symbolic":"method"}],"getColumnSortingStyle":[{"__symbolic":"method"}],"getColumnSortingNormalStyle":[{"__symbolic":"method"}],"getColumnSortingSelectedStyle":[{"__symbolic":"method"}],"getRowStyle":[{"__symbolic":"method"}],"getRowGeneralStyle":[{"__symbolic":"method"}],"getRowExpandBoxStyle":[{"__symbolic":"method"}],"getRowCellStyle":[{"__symbolic":"method"}],"getGridLinesStyle":[{"__symbolic":"method"}],"getDefaultGridStyle":[{"__symbolic":"method"}],"getDefaultColumnStyle":[{"__symbolic":"method"}],"getDefaultColumnHeaderStyle":[{"__symbolic":"method"}],"getDefaultColumnBodyStyle":[{"__symbolic":"method"}],"getDefaultColumnFooterStyle":[{"__symbolic":"method"}],"getDefaultColumnSortingStyle":[{"__symbolic":"method"}],"getDefaultRowStyle":[{"__symbolic":"method"}],"getDefaultRowGeneralStyle":[{"__symbolic":"method"}],"getDefaultRowExpandBoxStyle":[{"__symbolic":"method"}],"getDefaultRowCellStyle":[{"__symbolic":"method"}],"getDefaultGridLinesStyle":[{"__symbolic":"method"}],"updateStyle":[{"__symbolic":"method"}],"resetRefresh":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}]}}}}]