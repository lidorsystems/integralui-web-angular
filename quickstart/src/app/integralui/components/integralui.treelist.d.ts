import { ComponentFactoryResolver, ElementRef, EventEmitter, QueryList, ViewContainerRef } from '@angular/core';
import { IntegralUIBaseComponent, IntegralUIBaseService, IntegralUIItem, IntegralUIObjectState, IntegralUISpeedMode } from './integralui.core';
import { IntegralUICommonService } from '../services/integralui.common.service';
import { IntegralUIDataService } from '../services/integralui.data.service';
import * as i0 from "@angular/core";
export declare class IntegralUITreeListItem extends IntegralUIItem {
    protected elemRef: ElementRef;
    protected commonService?: IntegralUICommonService;
    protected baseService?: IntegralUIBaseService;
    templateData: Array<any>;
    clickPos: any;
    isClicked: boolean;
    isHovered: boolean;
    protected parentCtrl: any;
    indent: number;
    templateRef: any;
    type: string;
    constructor(elemRef: ElementRef, commonService?: IntegralUICommonService, baseService?: IntegralUIBaseService);
    ngOnInit(): void;
    onMouseDown(e: any): void;
    onMouseEnter(e: any): void;
    onMouseMove(e: any): void;
    onMouseLeave(e: any): void;
    getControlStyle(): any;
    static ɵfac: i0.ɵɵFactoryDef<IntegralUITreeListItem, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<IntegralUITreeListItem, "iui-treelistitem", never, { "controlStyle": "controlStyle"; "data": "data"; "enabled": "enabled"; "icon": "icon"; "name": "name"; "size": "size"; "state": "state"; "text": "text"; "indent": "indent"; "templateRef": "templateRef"; "type": "type"; }, { "click": "click"; "mouseDown": "mouseDown"; "mouseEnter": "mouseEnter"; "mouseLeave": "mouseLeave"; "mouseMove": "mouseMove"; "mouseUp": "mouseUp"; }, never, never>;
}
export declare class IntegralUITreeList extends IntegralUIBaseComponent {
    protected dataService: IntegralUIDataService;
    protected elemRef: ElementRef;
    protected commonService?: IntegralUICommonService;
    protected cmpResolver?: ComponentFactoryResolver;
    protected baseService?: IntegralUIBaseService;
    animateItemSize: any;
    private animSpeed;
    protected prevClickedObj: any;
    private currentDataFields;
    currentList: Array<any>;
    currentTitle: string;
    nextList: Array<any>;
    prevList: Array<any>;
    clickPos: any;
    private hoverItem;
    isClicked: boolean;
    protected avgItemHeight: number;
    blockPos: {
        top: number;
        left: number;
    };
    private currentIndent;
    headerWidth: number;
    leftBlockPos: {
        top: number;
        left: number;
    };
    rightBlockPos: {
        top: number;
        left: number;
    };
    blockSize: any;
    private currentBlockHeight;
    maxBlockHeight: number;
    leftBlockOpacity: number;
    blockOpacity: number;
    rightBlockOpacity: number;
    protected updateTimer: any;
    contentList: QueryList<IntegralUITreeListItem>;
    contentRef: ViewContainerRef;
    blockElem: ElementRef;
    headerElem: ElementRef;
    itemElems: QueryList<ElementRef>;
    leftBlockElem: ElementRef;
    rightBlockElem: ElementRef;
    itemTemplate: any;
    currentScrollPos: any;
    maxScrollPos: any;
    protected isScrollActive: boolean;
    private isScrollAllowed;
    isScrollAvailable: boolean;
    protected isScrollTimerActive: boolean;
    protected prevScrollPos: {
        x: number;
        y: number;
    };
    scrollBarSize: {
        width: number;
        height: number;
    };
    private scrollCount;
    scrollLargeChange: {
        x: number;
        y: number;
    };
    protected scrollSize: {
        width: number;
        height: number;
    };
    private scrollTimerID;
    private currentSelection;
    headerItem: any;
    headerText: string;
    private selList;
    private tRef;
    set dataFields(value: any);
    set indent(value: number);
    get indent(): number;
    items: Array<any>;
    mouseWheelSpeed: IntegralUISpeedMode;
    set selectedItem(value: any);
    get selectedItem(): any;
    set showScroll(value: boolean);
    get showScroll(): boolean;
    set title(value: string);
    get title(): string;
    afterSelect: EventEmitter<any>;
    beforeSelect: EventEmitter<any>;
    clear: EventEmitter<any>;
    itemAdding: EventEmitter<any>;
    itemAdded: EventEmitter<any>;
    itemRemoving: EventEmitter<any>;
    itemRemoved: EventEmitter<any>;
    scrollPosChanged: EventEmitter<any>;
    selectionChanged: EventEmitter<any>;
    constructor(dataService: IntegralUIDataService, elemRef: ElementRef, commonService?: IntegralUICommonService, cmpResolver?: ComponentFactoryResolver, baseService?: IntegralUIBaseService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    protected updateList(targetList: Array<any>, sourceList: Array<any>): void;
    private addChildItems;
    private addItemToCurrentList;
    protected updateDataFields(fields?: any): void;
    private scrollAppearanceTimeout;
    protected resetScrollAppearanceTimeout(): void;
    private updateScrollAppearance;
    ctrlMouseMove(e: any): void;
    ctrlMouseLeave(e: any): void;
    onItemMouseEnter(e: any, item: any): void;
    onItemMouseLeave(e: any, item: any): void;
    onItemMouseDown(e: any, item: any): void;
    onHeaderMouseDown(e: any): void;
    getHeaderText(): any;
    protected getItemElemList(): ElementRef<any>[];
    getItemParent(item: any): any;
    getItemState(item: any): IntegralUIObjectState;
    isGroupItem(item: any): boolean;
    protected isItemAllowed(item: any): boolean;
    isItemExpanded(item: any): boolean;
    protected resetLayoutTimer(): void;
    protected updateBlockSize(): void;
    updateLayout(): void;
    protected updateScrollSize(): void;
    protected updateSelList(): void;
    updateView(): void;
    scrollPos(value?: any): any;
    protected changeVerticalScrollPos(value: number): void;
    processMouseWheel(e: any, flag?: boolean): void;
    isHorScrollVisible(): boolean;
    isVerScrollVisible(): boolean;
    onVerticalScrollStart(e: any): void;
    onVerticalScrollEnd(e: any): void;
    onVerticalScrollChanged(e: any): void;
    scrollMouseEnter(e: any): void;
    getControlStyle(): any;
    refresh(): void;
    static ɵfac: i0.ɵɵFactoryDef<IntegralUITreeList, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<IntegralUITreeList, "iui-treelist", never, { "controlStyle": "controlStyle"; "data": "data"; "enabled": "enabled"; "state": "state"; "dataFields": "dataFields"; "indent": "indent"; "items": "items"; "mouseWheelSpeed": "mouseWheelSpeed"; "selectedItem": "selectedItem"; "showScroll": "showScroll"; "title": "title"; }, { "afterSelect": "afterSelect"; "beforeSelect": "beforeSelect"; "clear": "clear"; "itemAdding": "itemAdding"; "itemAdded": "itemAdded"; "itemRemoving": "itemRemoving"; "itemRemoved": "itemRemoved"; "scrollPosChanged": "scrollPosChanged"; "selectionChanged": "selectionChanged"; }, ["itemTemplate"], never>;
}
