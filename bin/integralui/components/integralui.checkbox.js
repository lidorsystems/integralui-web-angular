/*
  filename: integralui.checkbox.js
  version : 1.3.0
  Copyright Â© 2016-2020 Lidor Systems. All rights reserved.

  This file is part of the "IntegralUI Web" Library. 
                                                                   
  The contents of this file are subject to the IntegralUI Web License, and may not be used except in compliance with the License.
  A copy of the License should have been installed in the product's root installation directory or it can be found at
  http://www.lidorsystems.com/products/web/studio/license-agreement.aspx.
                                                            
  This SOFTWARE is provided "AS IS", WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific language 
  governing rights and limitations under the License. Any infringement will be prosecuted under applicable laws.                           
*/
var __extends=this&&this.__extends||function(){var d=function(b,a){d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return d(b,a)};return function(b,a){function c(){this.constructor=b}d(b,a);b.prototype=null===a?Object.create(a):(c.prototype=a.prototype,new c)}}();Object.defineProperty(exports,"__esModule",{value:!0});
var core_1=require("@angular/core"),animations_1=require("@angular/animations"),integralui_core_1=require("./integralui.core"),integralui_common_service_1=require("../services/integralui.common.service"),forms_1=require("@angular/forms"),i0=require("@angular/core"),i1=require("../services/integralui.common.service"),i2=require("@angular/common"),_c0=["*"],IntegralUICheckBox=function(d){function b(a,c){var b=d.call(this,a,c)||this;b.elemRef=a;b.commonService=c;b.animationState="start";b.buttonClass=
[];b.checked=!1;b.checkState=integralui_core_1.IntegralUICheckState.Unchecked;b.threeState=!1;b.checkedChanged=new core_1.EventEmitter;b.checkStateChanged=new core_1.EventEmitter;return b}__extends(b,d);b.prototype.ngOnInit=function(){this.generalClassName="iui-checkbox";this.buttonClassName=this.generalClassName+"-btn";this.contentClassName=this.generalClassName+"-content";this.initStyle()};b.prototype.initStyle=function(){this.defaultStyle={general:{disabled:this.generalClassName+"-disabled",focused:this.generalClassName+
"-focused",normal:this.generalClassName,hovered:this.generalClassName+"-hovered",selected:this.generalClassName+"-selected"},button:{general:this.buttonClassName,disabled:this.buttonClassName+"-disabled",checked:this.buttonClassName+"-checked",indeterminate:this.buttonClassName+"-indeterminate",unchecked:this.buttonClassName+"-unchecked"},content:{disabled:this.contentClassName+"-disabled",focused:this.contentClassName+"-focused",normal:this.contentClassName,hovered:this.contentClassName+"-hovered",
selected:this.contentClassName+"-selected"}};this.updateStyle(this.controlStyle);this.updateControlClass();this.updateButtonClass();this.updateContentClass()};b.prototype.ngAfterViewInit=function(){};b.prototype.updateCheckValue=function(b){var a=this;a.animationState="middle";var d=setTimeout(function(){a.animationState="end";a.threeState?a.checkState=b:a.checked=b;a.updateButtonClass();var c={checked:a.checked,checkState:a.checkState};a.threeState?a.checkStateChanged.emit(c):a.checkedChanged.emit(c);
var e=setTimeout(function(){a.animationState="start";clearTimeout(e)},175);clearTimeout(d)},175)};b.prototype.processValueChange=function(){this.updateCheckValue(this.value)};b.prototype.checkMouseDown=function(a){if(this.isEnabled&&1==a.which){if(this.threeState)switch(this.checkState){case integralui_core_1.IntegralUICheckState.Indeterminate:this.checkState=integralui_core_1.IntegralUICheckState.Checked;this.checked=!1;break;case integralui_core_1.IntegralUICheckState.Checked:this.checkState=integralui_core_1.IntegralUICheckState.Unchecked;
this.checked=!0;break;default:this.checkState=integralui_core_1.IntegralUICheckState.Indeterminate,this.checked=!1}else this.checkState=(this.checked=void 0!=this.checked?!this.checked:!0)?integralui_core_1.IntegralUICheckState.Checked:integralui_core_1.IntegralUICheckState.Unchecked;this.threeState?this.value=this.checkState:this.value=this.checked}};b.prototype.getControlStyle=function(){var a={};0<this.ctrlSize.width&&(a.width=this.ctrlSize.width+"px");0<this.ctrlSize.height&&(a.height=this.ctrlSize.height+
"px");return a};b.prototype.updateButtonClass=function(){this.buttonClass.length=0;this.buttonClass.push(this.buttonClassName);if(this.options.currentStyle){this.buttonClass.push(this.options.currentStyle.button.general);if(this.threeState)switch(this.checkState){case integralui_core_1.IntegralUICheckState.Indeterminate:this.buttonClass.push(this.options.currentStyle.button.indeterminate);break;case integralui_core_1.IntegralUICheckState.Checked:this.buttonClass.push(this.options.currentStyle.button.checked);
break;case integralui_core_1.IntegralUICheckState.Unchecked:this.buttonClass.push(this.options.currentStyle.button.unchecked)}else this.buttonClass.push(this.checked?this.options.currentStyle.button.checked:this.options.currentStyle.button.unchecked);this.state&integralui_core_1.IntegralUIObjectState.disabled&&this.buttonClass.push(this.options.currentStyle.button.disabled)}};b.prototype.getButtonClass=function(){return this.buttonClass};b.prototype.getButtonStyle=function(a){return this.commonService.isString(a)?
a:a?{general:this.commonService.isFieldAvailable(a.general,this.buttonClassName),disabled:this.commonService.isFieldAvailable(a.disabled,this.buttonClassName+"-disabled"),checked:this.commonService.isFieldAvailable(a.checked,this.buttonClassName+"-checked"),indeterminate:this.commonService.isFieldAvailable(a.indeterminate,this.buttonClassName+"-indeterminate"),unchecked:this.commonService.isFieldAvailable(a.unchecked,this.buttonClassName+"-unchecked")}:{general:this.defaultStyle.button.general,disabled:this.defaultStyle.button.disabled,
checked:this.defaultStyle.button.checked,indeterminate:this.defaultStyle.button.indeterminate,unchecked:this.defaultStyle.button.unchecked}};b.prototype.updateStyle=function(a){this.options.currentStyle=a?{general:this.getGeneralStyle(a.general),button:this.getButtonStyle(a.button),content:this.getContentStyle(a.button)}:{general:{disabled:this.defaultStyle.general.disabled,focused:this.defaultStyle.general.focused,hovered:this.defaultStyle.general.hovered,normal:this.defaultStyle.general.normal,
selected:this.defaultStyle.general.selected},button:{general:this.defaultStyle.button.general,disabled:this.defaultStyle.button.disabled,checked:this.defaultStyle.button.checked,indeterminate:this.defaultStyle.button.indeterminate,unchecked:this.defaultStyle.button.unchecked},content:{disabled:this.defaultStyle.content.disabled,focused:this.defaultStyle.content.focused,hovered:this.defaultStyle.content.hovered,normal:this.defaultStyle.content.normal,selected:this.defaultStyle.content.selected}}};
b.\u0275fac=function(a){return new (a||b)(i0.\u0275\u0275directiveInject(i0.ElementRef),i0.\u0275\u0275directiveInject(i1.IntegralUICommonService))};b.\u0275cmp=i0.\u0275\u0275defineComponent({type:b,selectors:[["iui-checkbox"]],inputs:{controlStyle:"controlStyle",data:"data",enabled:"enabled",name:"name",size:"size",state:"state",checked:"checked",checkState:"checkState",threeState:"threeState"},outputs:{valueChanged:"valueChanged",checkedChanged:"checkedChanged",checkStateChanged:"checkStateChanged"},
features:[i0.\u0275\u0275ProvidersFeature([{provide:forms_1.NG_VALUE_ACCESSOR,useExisting:core_1.forwardRef(function(){return b}),multi:!0}]),i0.\u0275\u0275InheritDefinitionFeature],ngContentSelectors:_c0,decls:5,vars:5,consts:[["draggable","true",3,"ngClass","ngStyle","dragstart","mousedown"],[3,"ngClass"]],template:function(a,b){a&1&&(i0.\u0275\u0275projectionDef(),i0.\u0275\u0275elementStart(0,"div",0),i0.\u0275\u0275listener("dragstart",function(a){return b.preventDragStart(a)})("mousedown",
function(a){return b.checkMouseDown(a)}),i0.\u0275\u0275elementStart(1,"div",1),i0.\u0275\u0275element(2,"span"),i0.\u0275\u0275elementEnd(),i0.\u0275\u0275elementStart(3,"div",1),i0.\u0275\u0275projection(4),i0.\u0275\u0275elementEnd(),i0.\u0275\u0275elementEnd());a&2&&(i0.\u0275\u0275property("ngClass",b.getControlClass())("ngStyle",b.getControlStyle()),i0.\u0275\u0275advance(1),i0.\u0275\u0275property("ngClass",b.getButtonClass()),i0.\u0275\u0275advance(1),i0.\u0275\u0275property("@ctrlAnimation",
b.allowAnimation&&b.animationState),i0.\u0275\u0275advance(1),i0.\u0275\u0275property("ngClass",b.getContentClass()))},directives:[i2.NgClass,i2.NgStyle],encapsulation:2,data:{animation:[animations_1.trigger("ctrlAnimation",[animations_1.state("start",animations_1.style({opacity:"1"})),animations_1.state("middle",animations_1.style({opacity:"0.6"})),animations_1.state("end",animations_1.style({opacity:"1"})),animations_1.transition("start => middle",animations_1.animate("175ms ease-out")),animations_1.transition("middle => end",
animations_1.animate("175ms ease-in"))])]}});return b}(integralui_core_1.IntegralUIBaseValueComponent);exports.IntegralUICheckBox=IntegralUICheckBox;
(function(){i0.\u0275setClassMetadata(IntegralUICheckBox,[{type:core_1.Component,args:[{selector:"iui-checkbox",template:'\n\t\t<div [ngClass]="getControlClass()" [ngStyle]="getControlStyle()" draggable="true" (dragstart)="preventDragStart($event)" (mousedown)="checkMouseDown($event)">\n            <div [ngClass]="getButtonClass()">\n                <span [@ctrlAnimation]="allowAnimation && animationState"></span>\n            </div>\n            <div [ngClass]="getContentClass()">\n    \t\t\t<ng-content></ng-content>\n            </div>\n\t\t</div>\n\t',inputs:"controlStyle data enabled name size state".split(" "),
outputs:["valueChanged"],providers:[{provide:forms_1.NG_VALUE_ACCESSOR,useExisting:core_1.forwardRef(function(){return IntegralUICheckBox}),multi:!0}],animations:[animations_1.trigger("ctrlAnimation",[animations_1.state("start",animations_1.style({opacity:"1"})),animations_1.state("middle",animations_1.style({opacity:"0.6"})),animations_1.state("end",animations_1.style({opacity:"1"})),animations_1.transition("start => middle",animations_1.animate("175ms ease-out")),animations_1.transition("middle => end",
animations_1.animate("175ms ease-in"))])],encapsulation:core_1.ViewEncapsulation.None}]}],function(){return[{type:i0.ElementRef},{type:i1.IntegralUICommonService}]},{checked:[{type:core_1.Input}],checkState:[{type:core_1.Input}],threeState:[{type:core_1.Input}],checkedChanged:[{type:core_1.Output}],checkStateChanged:[{type:core_1.Output}]})})();