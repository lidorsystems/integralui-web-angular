import { ChangeDetectorRef, ComponentFactoryResolver, ElementRef, EventEmitter, QueryList, Renderer, ViewContainerRef } from '@angular/core';
import { IntegralUIBaseComponent, IntegralUIBaseService, IntegralUITabScrollMode, IntegralUITabStripPlacement } from './integralui.core';
import { IntegralUICommonService } from '../services/integralui.common.service';
import { IntegralUIDataService } from '../services/integralui.data.service';
import { IntegralUITab } from './integralui.tab';
export declare class IntegralUITabStrip extends IntegralUIBaseComponent {
    protected dataService: IntegralUIDataService;
    protected elemRef: ElementRef;
    protected elemRenderer: Renderer;
    private changeRef;
    protected commonService: IntegralUICommonService;
    protected cmpResolver: ComponentFactoryResolver;
    protected baseService: IntegralUIBaseService;
    private dataTabs;
    private eventList;
    private numTabs;
    tabList: Array<IntegralUITab>;
    reorderTab: any;
    protected tabReorderActive: boolean;
    protected reorderTabPos: any;
    protected reorderTabStartPos: any;
    protected reorderTabCurrentPos: any;
    protected startTabReorder: boolean;
    protected reorderTabIndex: number;
    protected reorderNewTabIndex: number;
    private orgHeaderList;
    private orgReorderTabIndex;
    ctrlCursor: string;
    protected autoSizeValue: boolean;
    blockPos: {
        top: string;
        right: string;
        bottom: string;
        left: string;
    };
    protected clientRect: {
        width: number;
        height: number;
    };
    protected currentTabPlacement: IntegralUITabStripPlacement;
    private scrollBlockSize;
    private scrollButtonSize;
    private tabSize;
    private tabStripSize;
    private updateTimer;
    contentList: QueryList<IntegralUITab>;
    scrollInBoundElem: ElementRef;
    scrollButtonElem: ElementRef;
    tabBlock: ElementRef;
    tabBlockRef: ViewContainerRef;
    tabHeaders: QueryList<ElementRef>;
    private currentScrollMode;
    private isScrollActive;
    private scrollCount;
    private scrollPos;
    private scrollTimer;
    private stopScrolling;
    private maxScrollPos;
    private currentSelection;
    private currentSelectedIndex;
    private selectedComponent;
    private prevComponent;
    private removeIndex;
    private tabHeaderClassName;
    private trialRef;
    allowDrag: boolean;
    allowDrop: boolean;
    autoSize: boolean;
    scrollMode: IntegralUITabScrollMode;
    selectedIndex: number;
    selectedTab: any;
    tabs: Array<any>;
    tabSpacing: number;
    tabStripPlacement: IntegralUITabStripPlacement;
    afterSelect: EventEmitter<any>;
    beforeSelect: EventEmitter<any>;
    tabAdding: EventEmitter<any>;
    tabAdded: EventEmitter<any>;
    tabOrderChanged: EventEmitter<any>;
    clear: EventEmitter<any>;
    tabRemoving: EventEmitter<any>;
    tabRemoved: EventEmitter<any>;
    selectionChanged: EventEmitter<any>;
    constructor(dataService: IntegralUIDataService, elemRef: ElementRef, elemRenderer: Renderer, changeRef: ChangeDetectorRef, commonService?: IntegralUICommonService, cmpResolver?: ComponentFactoryResolver, baseService?: IntegralUIBaseService);
    ngOnInit(): void;
    protected updateData(): void;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    addTab(tab: any): void;
    clearTabs(): void;
    insertTabAt(tab: any, index: number): void;
    insertTabBefore(tab: any, refTab: any): void;
    insertTabAfter(tab: any, refTab: any): void;
    removeTab(tab: any): void;
    removeTabAt(index: number): void;
    private callEventAdd(type, tab, index?, refTab?, flag?);
    private callEventRemove(tab);
    private attachTabEvents();
    private getTabCurrentIndex(cmp);
    private getTabDataIndex(cmp);
    private getTabData(index);
    private getTabIndex(tab);
    private getComponentData(cmp);
    private isIndexInRange(index);
    private resetLayout();
    updateLayout(): void;
    private updateTabLayout();
    private updateTabHeaders();
    tabMouseDown(e: any, cmp: IntegralUITab): void;
    tabMouseMove(e: any, cmp: IntegralUITab): void;
    tabEnter(e: any, cmp: IntegralUITab): void;
    tabLeave(e: any, cmp: IntegralUITab): void;
    ctrlMouseMove(e: any): void;
    ctrlMouseUp(e: any): void;
    protected updateReorderTabPos(): void;
    protected resetReorderTabSettings(): void;
    getTabOpacity(cmp: IntegralUITab): 1 | 0;
    onWindowMouseUp(e: any): void;
    private startScroll(flag?);
    private stopScroll();
    private processScroll(flag?);
    protected processDragScroll(e: any): void;
    private scrollTimerElapsed(flag?);
    private scrollTabs();
    scrollButtonMouseDown(e: any, flag?: boolean): void;
    scrollButtonMouseUp(e: any): void;
    protected clearSelection(cmp: IntegralUITab): void;
    private selectComponent(cmp);
    private selectComponentByIndex(index);
    selectTab(tab: any): void;
    getScrollInBoundStyle(): {
        top: string;
        right: string;
        bottom: string;
        left: string;
        opacity: string;
        padding: string;
        width: string;
        height: string;
    };
    getScrollInBoundButtonStyle(type: number): {
        'margin-left': string;
        'margin-top': string;
    };
    getScrollOutBoundStyle(type: number): {
        top: string;
        right: string;
        bottom: string;
        left: string;
        opacity: string;
        padding: string;
        width: string;
        height: string;
    };
    getControlStyle(): any;
    getTabHeaderClass(cmp: IntegralUITab, flag?: boolean): any;
    getReorderTabStyle(): any;
    tabTouchStart(e: any, cmp: IntegralUITab): void;
}
