import { ElementRef, EventEmitter } from '@angular/core';
import { IntegralUIBaseService, IntegralUIItem } from './integralui.core';
import { IntegralUICommonService } from '../services/integralui.common.service';
import * as i0 from "@angular/core";
export declare class IntegralUIListItem extends IntegralUIItem {
    protected elemRef: ElementRef;
    protected commonService?: IntegralUICommonService;
    protected baseService?: IntegralUIBaseService;
    clickPos: any;
    isClicked: boolean;
    isHovered: boolean;
    contentElem: ElementRef;
    dragElem: ElementRef;
    protected parentCtrl: any;
    spacing: number;
    itemClick: EventEmitter<any>;
    itemDblClick: EventEmitter<any>;
    itemRightClick: EventEmitter<any>;
    constructor(elemRef: ElementRef, commonService?: IntegralUICommonService, baseService?: IntegralUIBaseService);
    ngOnInit(): void;
    onClick(e: any): void;
    onDblClick(e: any): void;
    onRightClick(e: any): void;
    itemDragStart(e: any): void;
    itemDragOver(e: any, flag?: boolean): void;
    itemDragDrop(e: any): void;
    private allowSelection;
    onMouseEnter(e: any): void;
    onMouseDown(e: any): void;
    onMouseUp(e: any): void;
    onMouseLeave(e: any): void;
    selectItem(): void;
    onTouchStart(e: any): void;
    getControlStyle(): any;
    static ɵfac: i0.ɵɵFactoryDef<IntegralUIListItem, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<IntegralUIListItem, "iui-listitem", never, { "controlStyle": "controlStyle"; "data": "data"; "enabled": "enabled"; "icon": "icon"; "name": "name"; "size": "size"; "state": "state"; "text": "text"; "spacing": "spacing"; }, { "click": "click"; "mouseDown": "mouseDown"; "mouseEnter": "mouseEnter"; "mouseLeave": "mouseLeave"; "mouseMove": "mouseMove"; "mouseUp": "mouseUp"; "itemClick": "itemClick"; "itemDblClick": "itemDblClick"; "itemRightClick": "itemRightClick"; }, never, ["*"]>;
}
